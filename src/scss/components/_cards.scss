@use "../utils/variables" as v;
@use "../utils/functions" as f;
@use "../utils/mixins" as m;

.cards-container {
    display: flex;
    flex-direction: column;
    gap: 15px;
    padding-top: 15px;
}

.card {
    cursor: pointer;
    
    width: 100%;
    padding: 35px 25px;
    background-color: f.getColor('card-bg');
    border-radius: 12px;
    
    color: f.getColor('text-color');
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: repeat(2, max-content) 1fr repeat(2, max-content);
    row-gap: 12px;

    @media (min-width: 490px) and (max-width: 584px) {
        padding: 35px 50px 55px 50px;  
        grid-template-columns: 40% 30% 30%;
        grid-template-rows: 35% repeat(2, max-content);
        row-gap: 25px;
    }

    @media (min-width: 585px) {
        padding: 15px 45px;   
        grid-template-columns: 35% 35% 15% 15%;
        grid-template-rows: 50px 50px;
        row-gap: 5px;
        
    }

    // &__input {
    //     display: none;
    // }

    &__shortcut {
        width: max-content;
        font-weight: 500;
        font-family: f.getFont("monospace-font");
        letter-spacing: -1px;
        align-self: flex-end;

        grid-row: 2 / 3;

        @media (min-width: 585px) {
            grid-row: 1 / 2;
        }

        @media (min-width: 490px) and (max-width: 584px) {
            grid-column: 3 / 4;
            grid-row: 1 / 2;
            align-self: center;
            justify-self: flex-end;
        }
    }

    &__command {
        max-width: 45%;
        height: 26px;
        display: inline-block;

        background-color: f.getColor('card-command-reveal');
        padding: 2px 15px;
        border-radius: 5px;
        
        font-family: f.getFont('input-font');
        font-weight: 400;
        
        opacity: 50%;
        transition: opacity .3s;
        
        grid-row: 3 / 4;

        @media (min-width: 585px) {
            grid-row: 2 / 3;
            max-width: calc(100% - 45px);
        }

        @media (min-width: 490px) and (max-width: 584px) {
            max-width: 100%;
            grid-row: 2 / 3;
            grid-column: 2 / 4;
        }

        &-text {
            width: inherit;
            opacity: 0%;
            transition: opacity .3s;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }
    }

    &__description {
        position: relative;
        width: 100%;
        padding-left: 0px;
        padding-bottom: 15px;
        font-size: 1.2rem;
        font-family: f.getFont("sec-font");
        align-self: center;

        grid-row: 1 / 2;

        @media (min-width: 490px) and (max-width: 584px) {
            padding-bottom: 0px;
            grid-column: 1 / 3;
            grid-row: 1 / 2;
            align-self: center;
        }


        @media (min-width: 585px) {
            width: 195px;
            grid-row: 1 / 3;
            padding-left: 15px;
            padding-bottom: 0px;
        }

        &::before {
            position: absolute;
            content: "";
            bottom: 0;
            left: 0;
            width: 15%;
            height: 1px;
 
            background-color: f.getColor('line-color');

            @media (min-width: 490px) and (max-width: 584px) {
                bottom: -15px;
            }

            @media (min-width: 585px) {
                display: block;
                top: 52%;
                left: 0;
                width: 0.5px;
                height: 65px;
                transform: translateY(-50%);
            }
        }
    }

    &__stats {
        width: max-content;
        align-self: center;
        display: flex;
        flex-direction: row;
        gap: 8px;

        grid-row: 4 / 5;

        @media (min-width: 585px) {
            grid-row: 1 / 3;
            flex-direction: column;
        }

        @media (min-width: 490px) and (max-width: 584px) {
            grid-row: 2 / 3;
            grid-column: 1 / 2;
        }
    }

    &__edit-btn {
        align-self: center;
        justify-self: center;

        grid-row: 5 / 6;

        &--active {
            transform: rotate(180deg);
        }

        @media (min-width: 585px) {
            grid-row: 1 / 3;
        }

        @media (min-width: 490px) and (max-width: 584px) {
            grid-row: 3 / 4;
            grid-column: 1 / 4;
        }
    }

    &__save-btn {
        background-color: f.getColor('secondary-btn-bg');

        &:hover {
            background-color: f.getColor('secondary-btn-hover-bg');
        }
    }
}

.card-icon {
    font-size: 1rem;
}

.card-pill {
    width: max-content;
    height: 28px;
    
    padding: 0 15px;
    font-size: 1rem;
    font-weight: 500;

    color: f.getColor('card-secondary-color');
    background-color: f.getColor('card-pill');
    
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: 15px 60%;
    justify-content: center;
    align-items: center;
    gap: 5px;

    border-radius: 30px;
}

.card:hover > .card__edit-btn {
    background-color: f.getColor("card-pill");
} 

.card--opened > .card__edit-btn,
.card--opened > .card__remove-btn {
    background-color: f.getColor("card-pill");
}

.card--opened > .card__edit-btn:hover,
.card--opened > .card__remove-btn:hover {
    background-color: f.getColor("pill-bg");
}



.card:hover > .card__command > .card__command-text {
    opacity: 15%;
} 

.card:hover > .card__command:hover > .card__command-text {
    opacity: 80%;
} 

.card:hover > .card__command  {
    opacity: 100%;
} 

.card-input {
    padding: 8px 12px;
}


/* card opened styles */ 
.card--opened {
    height: 450px;

    padding: 25px 45px;   
    grid-template-columns: 45px 25% 55% 15%;
    grid-template-rows: 10% 1fr max-content;
    row-gap: 25px;

    // .form-command {
    //     background-color: red;
    // }

    .card__shortcut {
        width: 90%;
        grid-column: 2 / 3;
        grid-row: 1 / 2;
        align-self: center;
    }

    .card__command {       
        background-color: red;
    }

    .card__description {
        width: 100%;
        grid-column: 3 / 4;
        grid-row: 1 / 2;
    }

    .card__expansion {
        padding: 12px 14px;
        grid-column: 3 / 4;
        grid-row: 2 / 3;
    }

    .card__stats {
        grid-row: 3 / 4;
        grid-column: 3 / 4;
        align-self: flex-start;
        flex-direction: row;

    }

    .card__edit-btn {
        grid-row: 1 / 2;
        grid-column: 4 / 5;
        align-self: flex-start;
    }

    .card__remove-btn {
        grid-row: 2 / 3;
        grid-column: 4 / 5;
        align-self: flex-start;
        justify-self: center;
    }

    .card__save-btn {
        grid-row: 1 / 3;
        grid-column: 4 / 5;
        align-self: flex-end;
        justify-self: center;
    }
}